


ARM Macro Assembler    Page 1 


    1 00000000         ; Author: Brenden Moran
    2 00000000         
    3 00000000         
    4 00000000                 THUMB
    5 00000000                 AREA             DATA, ALIGN=4
    6 00000000         
    7 00000000                 ALIGN
    8 00000000         
    9 00000000         
   10 00000000 003D0900 
                       QUARTERSEC
                               DCD              4000000     ; approximately 0.2
                                                            5s delay at ~16 MHz
                                                             clock
   11 00000004         
   12 00000004         
   13 00000004         ; System Timer Address
   14 00000004 E000E010 
                       NVIC_ST_CTRL_R
                               EQU              0xE000E010
   15 00000004 E000E014 
                       NVIC_ST_RELOAD_R
                               EQU              0xE000E014
   16 00000004 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   17 00000004         
   18 00000004         
   19 00000004         ; memory address for Port B control registers
   20 00000004         
   21 00000004 400053FC 
                       GPIO_PORTB_DATA_R
                               EQU              0x400053FC  ; 8 Accesable Pins
   22 00000004 40005400 
                       GPIO_PORTB_DIR_R
                               EQU              0x40005400
   23 00000004 4000551C 
                       GPIO_PORTB_DEN_R
                               EQU              0x4000551C
   24 00000004 40005510 
                       GPIO_PORTB_PUR_R
                               EQU              0x40005510
   25 00000004 40005514 
                       GPIO_PORTB_PDR_R
                               EQU              0x40005514
   26 00000004         
   27 00000004         
   28 00000004         ; memory addresses for Port F control registers. 
   29 00000004         
   30 00000004 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   31 00000004 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   32 00000004 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   33 00000004 40025510 



ARM Macro Assembler    Page 2 


                       GPIO_PORTF_PUR_R
                               EQU              0x40025510  ; PULL UP RESISTOR 
                                                            MEMORY LOCATION 
   34 00000004         
   35 00000004         ; System control register use either one to turn on the 
                       clock for any port
   36 00000004         
   37 00000004 400FE118 
                       SYSCTL_RCGC2_R
                               EQU              0x400FE118
   38 00000004         
   39 00000004 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   40 00000004         
   41 00000004         
   42 00000004         
   43 00000004                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   44 00000000         
   45 00000000                 EXPORT           Start
   46 00000000         
   47 00000000         
   48 00000000         
   49 00000000         Start   proc
   50 00000000         
   51 00000000 F000 F870       BL               Ports_Init
   52 00000004 F000 F890       BL               SysTick_Init
   53 00000008         
   54 00000008 F8DF 813C       LDR              R8, =NVIC_ST_CTRL_R
   55 0000000C         Loop
   56 0000000C 484F            LDR              R0, =GPIO_PORTB_DATA_R
   57 0000000E 6802            LDR              R2, [R0]
   58 00000010 F042 0201       ORR              R2, #0x01
   59 00000014 F002 0201       AND              R2, #0x01
   60 00000018         
   61 00000018 6002            STR              R2, [R0]
   62 0000001A F000 F847       BL               Delay_Loser ; Quarter Second de
                                                            lay of pin B0 being
                                                             lit
   63 0000001E         
   64 0000001E         
   65 0000001E         Shift_L
   66 0000001E EA4F 0242       LSL              R2, #1      ; This constantly s
                                                            hift the bit being 
                                                            lit left 
   67 00000022 6002            STR              R2, [R0]    ; Which will light 
                                                            the LEDs in order f
                                                            rom right to left
   68 00000024         
   69 00000024 4D4A            LDR              R5, =GPIO_PORTF_DATA_R
   70 00000026 682E            LDR              R6, [R5]
   71 00000028 F006 0610       AND              R6, #0x10
   72 0000002C 2E00            CMP              R6, #0x00   ; If the button is 
                                                            pressed before the 
                                                            green LED is shown 
                                                            then the user
   73 0000002E D005            BEQ              Normal_LEDL ; Lost the game
   74 00000030         



ARM Macro Assembler    Page 3 


   75 00000030 2A08            CMP              R2, #0x08
   76 00000032 D000            BEQ              Possible_winL ; When the Green 
                                                            LED is lit make sur
                                                            e to check if the b
                                                            utton was pressed.
   77 00000034 E002            B                Normal_LEDL
   78 00000036         Possible_winL
   79 00000036 F000 F847       BL               Delay_Win   ; Quarter second de
                                                            lay where the user 
                                                            might win the game
   80 0000003A E001            B                End_L
   81 0000003C         Normal_LEDL
   82 0000003C F000 F836       BL               Delay_Loser ; Quarter second de
                                                            lay where the user 
                                                            might have lost
   83 00000040         End_L
   84 00000040 2A40            CMP              R2, #0x40   ; If the shift has 
                                                            shifted the bit to 
                                                            the last LED on the
                                                             left
   85 00000042 D1EC            BNE              Shift_L     ; Then start shifti
                                                            ng it right
   86 00000044         
   87 00000044         Shift_R
   88 00000044 EA4F 0252       LSR              R2, #1      ; This constatly sh
                                                            ift the bit being l
                                                            it right
   89 00000048 6002            STR              R2, [R0]    ; Which will light 
                                                            the LEDs in order f
                                                            rom left to right
   90 0000004A         
   91 0000004A 4D41            LDR              R5, =GPIO_PORTF_DATA_R
   92 0000004C 682E            LDR              R6, [R5]
   93 0000004E F006 0610       AND              R6, #0x10
   94 00000052 2E00            CMP              R6, #0x00   ; If the button is 
                                                            pressed before the 
                                                            green LED is shown 
                                                            then the user
   95 00000054 D005            BEQ              Normal_LEDR ; Lost the game
   96 00000056         
   97 00000056 2A08            CMP              R2, #0x08   ; When the Green LE
                                                            D is lit make sure 
                                                            to check if the but
                                                            ton was pressed.
   98 00000058 D000            BEQ              Possible_winR
   99 0000005A E002            B                Normal_LEDR
  100 0000005C         Possible_winR                        ; Quarter second de
                                                            lay where the user 
                                                            might win the game
  101 0000005C F000 F834       BL               Delay_Win
  102 00000060 E001            B                End_R
  103 00000062         Normal_LEDR
  104 00000062 F000 F823       BL               Delay_Loser ; Quarter second de
                                                            lay where the user 
                                                            might have lost
  105 00000066         End_R
  106 00000066 2A01            CMP              R2, #0x01
  107 00000068 D1EC            BNE              Shift_R     ; If the shift has 
                                                            shifted the bit to 



ARM Macro Assembler    Page 4 


                                                            the last LED on the
                                                             right
  108 0000006A E7D8            B                Shift_L     ; then start the lo
                                                            op over again
  109 0000006C         
  110 0000006C         
  111 0000006C         Winner_Loop                          ; This is the count
                                                            er for the winner l
                                                            oop
  112 0000006C F04F 030A       MOV              R3, #10
  113 00000070         Loop_Win
  114 00000070 4836            LDR              R0, =GPIO_PORTB_DATA_R ; If the
                                                             user has won then 
                                                            flash the green LED
                                                            
  115 00000072 6802            LDR              R2, [R0]
  116 00000074 F082 0208       EOR              R2, #0x08
  117 00000078 6002            STR              R2, [R0]
  118 0000007A F000 F80F       BL               Delay
  119 0000007E 3B01            SUBS             R3, #1
  120 00000080 D1F6            BNE              Loop_Win
  121 00000082 E7C3            B                Loop
  122 00000084         
  123 00000084         Loser_Loop
  124 00000084 F04F 030A       MOV              R3, #10     ; Counter for the l
                                                            oser loop
  125 00000088         Loop_lost
  126 00000088 4830            LDR              R0, =GPIO_PORTB_DATA_R ; If the
                                                             user has lost then
                                                             flash the red LEDs
                                                            
  127 0000008A 6802            LDR              R2, [R0]
  128 0000008C F082 0263       EOR              R2, #0x63
  129 00000090 6002            STR              R2, [R0]
  130 00000092 F000 F803       BL               Delay
  131 00000096 3B01            SUBS             R3, #1
  132 00000098 D1F6            BNE              Loop_lost
  133 0000009A E7B7            B                Loop
  134 0000009C         
  135 0000009C         Delay
  136 0000009C F8D8 1000       LDR              R1, [R8]
  137 000000A0 F401 3180       AND              R1, #0x10000
  138 000000A4 F5B1 3F80       CMP              R1, #0x10000
  139 000000A8 D1F8            BNE              Delay
  140 000000AA 4770            BX               LR
  141 000000AC         
  142 000000AC         
  143 000000AC         Delay_Loser
  144 000000AC 4B28            LDR              R3, =GPIO_PORTF_DATA_R
  145 000000AE 681C            LDR              R4, [R3]
  146 000000B0 F004 0410       AND              R4, #0x10
  147 000000B4 2C00            CMP              R4, #0x00
  148 000000B6 D0E5            BEQ              Loser_Loop
  149 000000B8 F8D8 1000       LDR              R1, [R8]
  150 000000BC F401 3180       AND              R1, #0x10000
  151 000000C0 F5B1 3F80       CMP              R1, #0x10000
  152 000000C4 D1F2            BNE              Delay_Loser
  153 000000C6 4770            BX               LR
  154 000000C8         



ARM Macro Assembler    Page 5 


  155 000000C8         Delay_Win
  156 000000C8 4B21            LDR              R3, =GPIO_PORTF_DATA_R
  157 000000CA 681C            LDR              R4, [R3]
  158 000000CC F004 0410       AND              R4, #0x10
  159 000000D0 2C00            CMP              R4, #0x00
  160 000000D2 D0CB            BEQ              Winner_Loop
  161 000000D4 F8D8 1000       LDR              R1, [R8]
  162 000000D8 F401 3180       AND              R1, #0x10000
  163 000000DC F5B1 3F80       CMP              R1, #0x10000
  164 000000E0 D1F2            BNE              Delay_Win
  165 000000E2 4770            BX               LR
  166 000000E4         
  167 000000E4         
  168 000000E4         Ports_Init
  169 000000E4 481B            LDR              R0, =SYSCTL_RCGCGPIO_R ;Initial
                                                            ize Port B,F clock
  170 000000E6 6801            LDR              R1, [R0]
  171 000000E8 F041 0122       ORR              R1, #0x22
  172 000000EC 6001            STR              R1, [R0]
  173 000000EE         
  174 000000EE BF00            NOP
  175 000000F0 BF00            NOP
  176 000000F2 BF00            NOP
  177 000000F4         
  178 000000F4 4818            LDR              R0, =GPIO_PORTF_DIR_R ; initial
                                                            izes pin 4 as input
                                                            
  179 000000F6 6801            LDR              R1, [R0]
  180 000000F8 F021 0110       BIC              R1, #0x10
  181 000000FC 6001            STR              R1, [R0]
  182 000000FE         
  183 000000FE 4817            LDR              R0, =GPIO_PORTB_DIR_R ; initial
                                                            izes pins 0-6
  184 00000100 6801            LDR              R1, [R0]
  185 00000102 F041 017F       ORR              R1, #0x7F
  186 00000106 6001            STR              R1, [R0]
  187 00000108         
  188 00000108 4815            LDR              R0, =GPIO_PORTF_DEN_R ; Digital
                                                             enables pins 4
  189 0000010A 6801            LDR              R1, [R0]
  190 0000010C F041 0110       ORR              R1, #0x10
  191 00000110 6001            STR              R1, [R0]
  192 00000112         
  193 00000112 4814            LDR              R0, =GPIO_PORTB_DEN_R ; Digital
                                                             enables pins 0-6
  194 00000114 6801            LDR              R1, [R0]
  195 00000116 F041 017F       ORR              R1, #0x7F
  196 0000011A 6001            STR              R1, [R0]
  197 0000011C         
  198 0000011C         
  199 0000011C 4812            LDR              R0, =GPIO_PORTF_PUR_R
  200 0000011E 6801            LDR              R1, [R0]
  201 00000120 F081 0110       EOR              R1, #0x10   ; Creates pull up r
                                                            esistor for input
  202 00000124 6001            STR              R1, [R0]
  203 00000126         
  204 00000126 4770            BX               LR
  205 00000128         
  206 00000128         SysTick_Init



ARM Macro Assembler    Page 6 


  207 00000128 4F10            LDR              R7, =QUARTERSEC
  208 0000012A 683F            LDR              R7, [R7]
  209 0000012C         
  210 0000012C F04F 0100       MOV              R1, #0x00
  211 00000130 4805            LDR              R0, =NVIC_ST_CTRL_R 
                                                            ; Clears systick
  212 00000132 6001            STR              R1, [R0]
  213 00000134         
  214 00000134 480E            LDR              R0, =NVIC_ST_RELOAD_R ; Store t
                                                            he value to countdo
                                                            wn from
  215 00000136 4639            MOV              R1, R7      ; Num_Cycles=0.25s*
                                                            16MHz
  216 00000138 6001            STR              R1, [R0]    ; Num_cycles=0.25*1
                                                            6(10^6)=4000000
  217 0000013A         
  218 0000013A 480E            LDR              R0, =NVIC_ST_CURRENT_R ; Clears
                                                             the register
  219 0000013C 6001            STR              R1, [R0]
  220 0000013E         
  221 0000013E F04F 0105       MOV              R1, #0x05
  222 00000142 4801            LDR              R0, =NVIC_ST_CTRL_R 
                                                            ; Enable systick
  223 00000144 6001            STR              R1, [R0]
  224 00000146         
  225 00000146 4770            BX               LR
  226 00000148         
  227 00000148         
  228 00000148         
  229 00000148         
  230 00000148         ; -----------END of program---------------------    
  231 00000148                 ALIGN
  232 00000148                 ENDP
  233 00000148                 END
              E000E010 
              400053FC 
              400253FC 
              400FE608 
              40025400 
              40005400 
              4002551C 
              4000551C 
              40025510 
              00000000 
              E000E014 
              E000E018 
Command Line: --debug --xref --diag_suppress=9931,A1950W --cpu=Cortex-M4.fp.sp 
--depend=.\objects\carnival_game.d -o.\objects\carnival_game.o -I.\RTE\_Carniva
l_Game_Target -IC:\Users\brenb\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Co
re\Include -IC:\Users\brenb\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\
Include\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA
 538" --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --predefine=
"_RTE_ SETA 1" --list=.\listings\carnival_game.lst Carnival_Game.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 5 in file Carnival_Game.s
   Uses
      None
Comment: DATA unused
QUARTERSEC 00000000

Symbol: QUARTERSEC
   Definitions
      At line 10 in file Carnival_Game.s
   Uses
      At line 207 in file Carnival_Game.s
Comment: QUARTERSEC used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 43 in file Carnival_Game.s
   Uses
      None
Comment: .text unused
Delay 0000009C

Symbol: Delay
   Definitions
      At line 135 in file Carnival_Game.s
   Uses
      At line 118 in file Carnival_Game.s
      At line 130 in file Carnival_Game.s
      At line 139 in file Carnival_Game.s

Delay_Loser 000000AC

Symbol: Delay_Loser
   Definitions
      At line 143 in file Carnival_Game.s
   Uses
      At line 62 in file Carnival_Game.s
      At line 82 in file Carnival_Game.s
      At line 104 in file Carnival_Game.s
      At line 152 in file Carnival_Game.s

Delay_Win 000000C8

Symbol: Delay_Win
   Definitions
      At line 155 in file Carnival_Game.s
   Uses
      At line 79 in file Carnival_Game.s
      At line 101 in file Carnival_Game.s
      At line 164 in file Carnival_Game.s

End_L 00000040

Symbol: End_L
   Definitions
      At line 83 in file Carnival_Game.s
   Uses
      At line 80 in file Carnival_Game.s
Comment: End_L used once
End_R 00000066

Symbol: End_R
   Definitions
      At line 105 in file Carnival_Game.s
   Uses
      At line 102 in file Carnival_Game.s
Comment: End_R used once
Loop 0000000C

Symbol: Loop
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 55 in file Carnival_Game.s
   Uses
      At line 121 in file Carnival_Game.s
      At line 133 in file Carnival_Game.s

Loop_Win 00000070

Symbol: Loop_Win
   Definitions
      At line 113 in file Carnival_Game.s
   Uses
      At line 120 in file Carnival_Game.s
Comment: Loop_Win used once
Loop_lost 00000088

Symbol: Loop_lost
   Definitions
      At line 125 in file Carnival_Game.s
   Uses
      At line 132 in file Carnival_Game.s
Comment: Loop_lost used once
Loser_Loop 00000084

Symbol: Loser_Loop
   Definitions
      At line 123 in file Carnival_Game.s
   Uses
      At line 148 in file Carnival_Game.s
Comment: Loser_Loop used once
Normal_LEDL 0000003C

Symbol: Normal_LEDL
   Definitions
      At line 81 in file Carnival_Game.s
   Uses
      At line 73 in file Carnival_Game.s
      At line 77 in file Carnival_Game.s

Normal_LEDR 00000062

Symbol: Normal_LEDR
   Definitions
      At line 103 in file Carnival_Game.s
   Uses
      At line 95 in file Carnival_Game.s
      At line 99 in file Carnival_Game.s

Ports_Init 000000E4

Symbol: Ports_Init
   Definitions
      At line 168 in file Carnival_Game.s
   Uses
      At line 51 in file Carnival_Game.s
Comment: Ports_Init used once
Possible_winL 00000036

Symbol: Possible_winL
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 78 in file Carnival_Game.s
   Uses
      At line 76 in file Carnival_Game.s
Comment: Possible_winL used once
Possible_winR 0000005C

Symbol: Possible_winR
   Definitions
      At line 100 in file Carnival_Game.s
   Uses
      At line 98 in file Carnival_Game.s
Comment: Possible_winR used once
Shift_L 0000001E

Symbol: Shift_L
   Definitions
      At line 65 in file Carnival_Game.s
   Uses
      At line 85 in file Carnival_Game.s
      At line 108 in file Carnival_Game.s

Shift_R 00000044

Symbol: Shift_R
   Definitions
      At line 87 in file Carnival_Game.s
   Uses
      At line 107 in file Carnival_Game.s
Comment: Shift_R used once
Start 00000000

Symbol: Start
   Definitions
      At line 49 in file Carnival_Game.s
   Uses
      At line 45 in file Carnival_Game.s
Comment: Start used once
SysTick_Init 00000128

Symbol: SysTick_Init
   Definitions
      At line 206 in file Carnival_Game.s
   Uses
      At line 52 in file Carnival_Game.s
Comment: SysTick_Init used once
Winner_Loop 0000006C

Symbol: Winner_Loop
   Definitions
      At line 111 in file Carnival_Game.s
   Uses
      At line 160 in file Carnival_Game.s
Comment: Winner_Loop used once
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTB_DATA_R 400053FC

Symbol: GPIO_PORTB_DATA_R
   Definitions
      At line 21 in file Carnival_Game.s
   Uses
      At line 56 in file Carnival_Game.s
      At line 114 in file Carnival_Game.s
      At line 126 in file Carnival_Game.s

GPIO_PORTB_DEN_R 4000551C

Symbol: GPIO_PORTB_DEN_R
   Definitions
      At line 23 in file Carnival_Game.s
   Uses
      At line 193 in file Carnival_Game.s
Comment: GPIO_PORTB_DEN_R used once
GPIO_PORTB_DIR_R 40005400

Symbol: GPIO_PORTB_DIR_R
   Definitions
      At line 22 in file Carnival_Game.s
   Uses
      At line 183 in file Carnival_Game.s
Comment: GPIO_PORTB_DIR_R used once
GPIO_PORTB_PDR_R 40005514

Symbol: GPIO_PORTB_PDR_R
   Definitions
      At line 25 in file Carnival_Game.s
   Uses
      None
Comment: GPIO_PORTB_PDR_R unused
GPIO_PORTB_PUR_R 40005510

Symbol: GPIO_PORTB_PUR_R
   Definitions
      At line 24 in file Carnival_Game.s
   Uses
      None
Comment: GPIO_PORTB_PUR_R unused
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 30 in file Carnival_Game.s
   Uses
      At line 69 in file Carnival_Game.s
      At line 91 in file Carnival_Game.s
      At line 144 in file Carnival_Game.s
      At line 156 in file Carnival_Game.s

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 32 in file Carnival_Game.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 188 in file Carnival_Game.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 31 in file Carnival_Game.s
   Uses
      At line 178 in file Carnival_Game.s
Comment: GPIO_PORTF_DIR_R used once
GPIO_PORTF_PUR_R 40025510

Symbol: GPIO_PORTF_PUR_R
   Definitions
      At line 33 in file Carnival_Game.s
   Uses
      At line 199 in file Carnival_Game.s
Comment: GPIO_PORTF_PUR_R used once
NVIC_ST_CTRL_R E000E010

Symbol: NVIC_ST_CTRL_R
   Definitions
      At line 14 in file Carnival_Game.s
   Uses
      At line 54 in file Carnival_Game.s
      At line 211 in file Carnival_Game.s
      At line 222 in file Carnival_Game.s

NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 16 in file Carnival_Game.s
   Uses
      At line 218 in file Carnival_Game.s
Comment: NVIC_ST_CURRENT_R used once
NVIC_ST_RELOAD_R E000E014

Symbol: NVIC_ST_RELOAD_R
   Definitions
      At line 15 in file Carnival_Game.s
   Uses
      At line 214 in file Carnival_Game.s
Comment: NVIC_ST_RELOAD_R used once
SYSCTL_RCGC2_R 400FE118

Symbol: SYSCTL_RCGC2_R
   Definitions
      At line 37 in file Carnival_Game.s
   Uses
      None
Comment: SYSCTL_RCGC2_R unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 39 in file Carnival_Game.s
   Uses
      At line 169 in file Carnival_Game.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Comment: SYSCTL_RCGCGPIO_R used once
14 symbols
373 symbols in table
